# ---------------------------------------------------------------------------- #
#                                   Fragments                                  #
# ---------------------------------------------------------------------------- #

fragment orderMinimal on Order {
  id
  status
  tx
  lastEventAt

  client {
    id
  }

  seller {
    id
  }

  listing {
    id
    title
    price
    bondFee
    deliveryDays
    revisions
  }
}

fragment orderFull on Order {
  id
  tx
  status
  revisionsLeft
  underRevision
  bondFeeWithdrawn

  events {
    type
    timestamp
    from {
      id
    }
  }

  listing {
    id
    title
    price
    bondFee
    deliveryDays
    revisions
  }

  tips {
    amount
    timestamp
  }

  client {
    id
  }

  seller {
    id
  }
}

# ---------------------------------------------------------------------------- #
#                                    Queries                                   #
# ---------------------------------------------------------------------------- #

#
# Get all orders from a client on a listing
#

query getMinimalOrdersByTx(
  $listingId: String!
  $clientId: String!
  $txHash: String!
) {
  orders(where: { listing: $listingId, client: $clientId, tx: $txHash }) {
    ...orderMinimal
  }
}

#
# Get a all orders received by a seller
#

query getSellerOrders($sellerId: String!, $limit: Int, $skip: Int = 0) {
  orders(
    where: { seller: $sellerId }
    first: $limit
    skip: $skip
    orderBy: lastEventAt
    orderDirection: desc
  ) {
    ...orderMinimal
  }
}

#
# Get a all orders placed by a client
#

query getClientOrders($clientId: String!, $limit: Int, $skip: Int = 0) {
  orders(
    where: { client: $clientId }
    first: $limit
    skip: $skip
    orderBy: lastEventAt
    orderDirection: desc
  ) {
    ...orderMinimal
  }
}

#
# Get an order by ud
#

query getOrderById($composedOrderId: ID!) {
  order(id: $composedOrderId) {
    ...orderFull
  }
}

#
# Get an order event by timestamp
#

query getOrderEvent(
  $composedOrderId: String!
  $type: OrderEventType!
  $minTimestamp: BigInt!
  $maxTimestamp: BigInt!
) {
  orderEvents(
    where: {
      order: $composedOrderId
      type: $type
      timestamp_gte: $minTimestamp
      timestamp_lte: $maxTimestamp
    }
  ) {
    id
    type
    timestamp
    from {
      id
    }
  }
}
